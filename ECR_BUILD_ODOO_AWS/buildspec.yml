version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
      - rsync -av $CODEBUILD_SRC_DIR/odoo.conf /mnt/efs/config/odoo.conf
  build:
    commands:
      - echo Build started on `date`
      - echo Determining Dockerfile to use...
      - |
        if [ "$ODOO_EDITION" == "enterprise" ]; then
          if [ "$ODOO_VERSION" == "13.0" ]; then
            DOCKERFILE="DockerfileEnterprise13"
          else
            DOCKERFILE="DockerfileEnterprise"
          fi
        else
          DOCKERFILE="Dockerfile"
        fi
        echo "Using Dockerfile: $DOCKERFILE, Edition: $ODOO_EDITION, Version: $ODOO_VERSION, Release: $ODOO_RELEASE"
        docker build -f $DOCKERFILE \
          --build-arg ODOO_VERSION=$ODOO_VERSION \
          --build-arg ODOO_RELEASE=$ODOO_RELEASE \
          -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
